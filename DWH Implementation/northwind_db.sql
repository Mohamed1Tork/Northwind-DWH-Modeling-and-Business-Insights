-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."date_Dim"
(
    date_key integer NOT NULL,
    date date NOT NULL,
    day_name character varying COLLATE pg_catalog."default",
    day_of_week integer,
    day_of_month integer,
    day_of_year integer,
    is_weekend integer,
    is_holiday integer,
    is_ramadan integer,
    week_of_year integer,
    month_name character varying COLLATE pg_catalog."default",
    month character varying COLLATE pg_catalog."default",
    quartar character varying COLLATE pg_catalog."default",
    year character varying COLLATE pg_catalog."default",
    CONSTRAINT "date_Dim_pkey" PRIMARY KEY (date_key)
);

CREATE TABLE IF NOT EXISTS public.orders_fact
(
    shipper_key integer NOT NULL,
    employee_key integer NOT NULL,
    location_key integer NOT NULL,
    customer_key integer NOT NULL,
    product_key integer NOT NULL,
    date_key integer NOT NULL,
    order_id character varying COLLATE pg_catalog."default",
    required_date date,
    shipped_date date,
    ship_name character varying COLLATE pg_catalog."default",
    ship_address character varying COLLATE pg_catalog."default",
    freight money,
    unit_price real,
    product_discount character varying COLLATE pg_catalog."default",
    total_sales money,
    quantity character varying COLLATE pg_catalog."default",
    return_flag integer,
    CONSTRAINT order_fact_pkey PRIMARY KEY (shipper_key, employee_key, location_key, customer_key, product_key, date_key)
);

CREATE TABLE IF NOT EXISTS public."customers_Dim"
(
    customer_key integer NOT NULL,
    customer_id character varying COLLATE pg_catalog."default" NOT NULL,
    location_key integer NOT NULL,
    company_name character varying COLLATE pg_catalog."default",
    contact_name character varying COLLATE pg_catalog."default",
    contact_title character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    fax character varying COLLATE pg_catalog."default",
    maturity character varying COLLATE pg_catalog."default",
    address character varying COLLATE pg_catalog."default",
    CONSTRAINT "customer_Dim_pkey" PRIMARY KEY (customer_key)
);

CREATE TABLE IF NOT EXISTS public."locations_Dim"
(
    location_key integer NOT NULL,
    postal_code character varying COLLATE pg_catalog."default",
    city character varying COLLATE pg_catalog."default",
    region character varying COLLATE pg_catalog."default",
    country character varying COLLATE pg_catalog."default",
    CONSTRAINT "location_Dim_pkey" PRIMARY KEY (location_key)
);

CREATE TABLE IF NOT EXISTS public."employees_Dim"
(
    employee_key integer NOT NULL,
    location_key integer NOT NULL,
    employee_id integer,
    last_name character varying COLLATE pg_catalog."default",
    first_name character varying COLLATE pg_catalog."default",
    title character varying COLLATE pg_catalog."default",
    birth_date date,
    hire_date date,
    address character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    supervised_by character varying COLLATE pg_catalog."default",
    CONSTRAINT "employees_Dim_pkey" PRIMARY KEY (employee_key)
);

CREATE TABLE IF NOT EXISTS public.returns_fact
(
    shipper_key integer NOT NULL,
    employee_key integer NOT NULL,
    location_key integer NOT NULL,
    customer_key integer NOT NULL,
    product_key integer NOT NULL,
    date_key integer NOT NULL,
    order_id character varying COLLATE pg_catalog."default",
    required_date date,
    shipped_date date,
    ship_name character varying COLLATE pg_catalog."default",
    ship_address character varying COLLATE pg_catalog."default",
    freight money,
    unit_price real,
    product_discount character varying COLLATE pg_catalog."default",
    quantity character varying COLLATE pg_catalog."default",
    return_date date,
    return_cause character varying COLLATE pg_catalog."default",
    total_sales money,
    CONSTRAINT return_fact_pkey PRIMARY KEY (shipper_key, employee_key, location_key, customer_key, product_key, date_key)
);

CREATE TABLE IF NOT EXISTS public."products_Dim"
(
    product_key integer NOT NULL,
    supplier_key integer NOT NULL,
    product_id integer NOT NULL,
    product_name character varying COLLATE pg_catalog."default",
    quantity_per_unit character varying COLLATE pg_catalog."default",
    unit_price money,
    units_in_stock integer,
    discountinued integer,
    category_name character varying COLLATE pg_catalog."default",
    CONSTRAINT "product_Dim_pkey" PRIMARY KEY (product_key)
);

CREATE TABLE IF NOT EXISTS public."suppliers_Dim"
(
    supplier_key integer NOT NULL,
    location_key integer NOT NULL,
    supplier_id integer NOT NULL,
    company_name character varying COLLATE pg_catalog."default",
    contact_name character varying COLLATE pg_catalog."default",
    contact_title character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    fax character varying COLLATE pg_catalog."default",
    address character varying COLLATE pg_catalog."default",
    CONSTRAINT "suppliers_Dim_pkey" PRIMARY KEY (supplier_key)
);

CREATE TABLE IF NOT EXISTS public."shippers_Dim"
(
    shipper_key integer NOT NULL,
    shipper_id integer NOT NULL,
    company_name character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    freight_per_unit money,
    CONSTRAINT "shippers_Dim_pkey" PRIMARY KEY (shipper_key)
);

ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT customer_key FOREIGN KEY (customer_key)
    REFERENCES public."customers_Dim" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_customer_key
    ON public.orders_fact(customer_key);


ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT date_key FOREIGN KEY (date_key)
    REFERENCES public."date_Dim" (date_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_date_key
    ON public.orders_fact(date_key);


ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT employee_key FOREIGN KEY (employee_key)
    REFERENCES public."employees_Dim" (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_employee_key
    ON public.orders_fact(employee_key);


ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT location_key FOREIGN KEY (location_key)
    REFERENCES public."locations_Dim" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_location_key
    ON public.orders_fact(location_key);


ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT product_key FOREIGN KEY (product_key)
    REFERENCES public."products_Dim" (product_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_product_key
    ON public.orders_fact(product_key);


ALTER TABLE IF EXISTS public.orders_fact
    ADD CONSTRAINT shipper_key FOREIGN KEY (shipper_key)
    REFERENCES public."shippers_Dim" (shipper_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_orders_fact_shipper_key
    ON public.orders_fact(shipper_key);


ALTER TABLE IF EXISTS public."customers_Dim"
    ADD CONSTRAINT location_key FOREIGN KEY (location_key)
    REFERENCES public."locations_Dim" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_customers_dim_location_key
    ON public."customers_Dim"(location_key);


ALTER TABLE IF EXISTS public."employees_Dim"
    ADD CONSTRAINT location_key FOREIGN KEY (location_key)
    REFERENCES public."locations_Dim" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_employees_dim_location_key
    ON public."employees_Dim"(location_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT customer_key FOREIGN KEY (customer_key)
    REFERENCES public."customers_Dim" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_customer_key
    ON public.returns_fact(customer_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT date_key FOREIGN KEY (date_key)
    REFERENCES public."date_Dim" (date_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_date_key
    ON public.returns_fact(date_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT employee_key FOREIGN KEY (employee_key)
    REFERENCES public."employees_Dim" (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_employee_key
    ON public.returns_fact(employee_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT location_key FOREIGN KEY (location_key)
    REFERENCES public."locations_Dim" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_location_key
    ON public.returns_fact(location_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT product_key FOREIGN KEY (product_key)
    REFERENCES public."products_Dim" (product_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_product_key
    ON public.returns_fact(product_key);


ALTER TABLE IF EXISTS public.returns_fact
    ADD CONSTRAINT shipper_key FOREIGN KEY (shipper_key)
    REFERENCES public."shippers_Dim" (shipper_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_returns_fact_shipper_key
    ON public.returns_fact(shipper_key);


ALTER TABLE IF EXISTS public."products_Dim"
    ADD CONSTRAINT supplier_key FOREIGN KEY (supplier_key)
    REFERENCES public."suppliers_Dim" (supplier_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_products_dim_supplier_key
    ON public."products_Dim"(supplier_key);


ALTER TABLE IF EXISTS public."suppliers_Dim"
    ADD CONSTRAINT location_key FOREIGN KEY (location_key)
    REFERENCES public."locations_Dim" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_suppliers_dim_location_key
    ON public."suppliers_Dim"(location_key);

END;